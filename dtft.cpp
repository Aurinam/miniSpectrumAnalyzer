//on branch experiment
#include <iostream>
#include <fstream>
#include <complex>
#include <vector>
#include <cmath>
#include <utility>

using namespace std;
const double PI = 3.14159265358979323846;

vector<pair<double, double>> dtft(vector<double> x)
{
	int cycles = 4;
	vector<pair<double, double>> X;
	int N = x.size();
	int k = -cycles * N;
	//cout << "Resolution: " << (-cycles * k) << endl;
	while (k <= (cycles * N))
	{
		double re = 0;
		double im = 0;
		for (int n = 0; n < N; n++)
		{
			const double phi = 2 * PI * k * n / N;
			re += x[n] * cos(phi);
			im -= x[n] * sin(phi);
		}
		pair<double, double> temp;
		double mag = sqrt(re * re + im * im);
		double angle = atan(im/re);
        //cout << angle << endl;
		temp.first = mag;
		temp.second = angle;
		X.push_back(temp);
		k++;
	}
	return X;
}

int main()
{
	vector<double> x;
	/*int number;
	ifstream file("signal.txt");
	if (file.is_open()) {
		while (file >> number) {
			x.push_back(number);
		}

		file.close();
		std::cout << "Data from file:" << std::endl;
		for (const int& num : x) {
			std::cout << num << " ";
		}
	}
	else {
		std::cerr << "Unable to open file." << std::endl;
	}*/

    // single gate pulse
	x = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 01, 01, 01, 01, 01, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
    // periodic gate pulse
    //x = {1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,}; 
    // cosine wave
    //x = {1.0, 0.9202763834115076, 0.6938172437299284, 0.3567308642051302, -0.037235264606010475, -0.4252643334991101, -0.7454861810469219, -0.9468423196551252, -0.9972270701394408, -0.8886067234408316, -0.6383004933071154, -0.28621901558007534, 0.11149929226384798, 0.4914393464551088, 0.7930207565797969, 0.9681572012159172, 0.9889236588377862, 0.8520089752347099, 0.579243817888501, 0.21411983644509733, -0.18514496048778642, -0.5548889057342297, -0.8361573502407452, -0.984102818750775, -0.9751358156493221, -0.8106861047708024, -0.5169747375115512, -0.14083317873368514, 0.2577638407327867, 0.6152611289813428, 0.8746567325324758, 0.9945907401016836, 0.9559400060182284, 0.7648672828919766, 0.451838587761001, 0.06676547996893763, -0.32895319887590624, -0.6722212003152684, -0.9083053912814495, -0.9995628007280649, -0.931442687211952, -0.7148066143569577, -0.38419660458613847, 0.007672490781932545, 0.3983182287232485, 0.725453227170685, 0.9369167157464414, 0.9989914262791602, 0.901779717924137, 0.6607817286109886, 0.3144239209369128, -0.08206791097521278, -0.46547424154972555, -0.7746619921939791, -0.9603320315355318, -0.992879785517511, -0.8671156048213652, -0.6030922400918649, -0.24290748632920695, 0.15600819404661925, 0.5300487995287738, 0.8195745904772832, 0.9784214805920295, 0.9812617727454477, 0.8276425902122612, 0.5420580866102966, 0.17004392087710987, -0.22908327755849814, -0.5916837812202884, -0.8599419430508073, -0.9910847413690348, -0.9642018198320422, -0.783579585898617, -0.4780177550196898, -0.09623731569339937, 0.30088789734858357, 0.6500373676618942, 0.8955401782398655, 0.9982515851986665, 0.941794538883001, 0.7351709591212445, 0.41132640401553655, 0.021896991856912743, -0.3710238350681948, -0.7047859380489647, -0.9261718732257815, -0.9998822657704023, -0.914164197535198, -0.6826851773335478, -0.34235389447512427, 0.05256476962472326, 0.43910212664532305, 0.7556258644901961, 0.9516671489251403, 0.9959677395585412, 0.8814640297857971, 0.6264133193186724, 0.2714827382609743, -0.12673501426774764, -0.5047452194248315, -0.802275195885316, -0.9718846121153635, -0.9865297159763291, -0.8438753861779925, -0.5666674609074155, -0.19910597686372394, 0.20020240429988914, 0.5675890660225048, 0.8444752215863233, 0.9867121395816812, 0.9716205369785975, 0.8016067280563401, 0.5037789442494437, 0.12562500164915108, -0.2725594998819528, -0.6272851432807767, -0.8819919061704523, -0.9960674999367545, -0.9513228867806248, -0.7548924714693825, -0.4380965402362114, -0.05144732779796676, 0.34340501871201307, 0.6835023851292718, 0.9146171873677982, 0.9998988096644134, 0.9257493333030774, 0.7039916871311275, 0.36998451426652174, -0.02301566571621147, -0.4123460614807684, -0.73592901863079, -0.9421701299454784, -0.9981848208583601, -0.8950417038861123, -0.6491866636512096, -0.29982060608172384, 0.09735101757693944, 0.4790002908359957, 0.7842742930302815, 0.9644979291490531, 0.9909350390600767, 0.8593702987348438, 0.5907813420018613, 0.227993934874096, -0.17114647435047758, -0.5429980517718717, -0.8282700922177478, -0.981476758136258, -0.9781896705424252, -0.8189329464582965, -0.5290996299039166, -0.1549028412863906, 0.24399277678550396, 0.6039844216837803, 0.8676724216625766, 0.9930124547033011, 0.9600193993312983, 0.7739539069396892, 0.4644836054800291, 0.08095267827050114, -0.3154859295075118, -0.6616211787192952, -0.9022627615729818, -0.9990410434952366, -0.9365249952019277, -0.724682627622578, -0.39729162013739006, -0.0065535630568816705, 0.38522944152048433, 0.7155886775091062, 0.9318492787761142, 0.999529090804307, 0.9078367548238462, 0.671392360110345, 0.3278963112010932, -0.06788189729812477, -0.45283652509033945, -0.765587621875431, -0.956267890597929, -0.9944738899885995, -0.8741137791538361, -0.6143786447511094, -0.2566825353198029, 0.14194089417311245, 0.5179322408154449, 0.81134072468661, 0.9753831748426779, 0.9839034764827005, 0.8355430910843423, 0.5539576716124333, 0.18404523410476795, -0.21521270676032592, -0.5801555769879433, -0.8525942456526466, -0.9890891208254101, -0.9678764723171076, -0.792338598240745, -0.49046452693555725, -0.11038724383904756};
// sine wave
//x = {0.0, 0.3912689332607891, 0.720151117685035, 0.9342071989250891, 0.9993065270825165, 0.9050691944009351, 0.6665210828384021, 0.32169802876315795, -0.07441888591686176, -0.45866991514132416, -0.7697872954549804, -0.9581642213735454, -0.9937645132649188, -0.8709118030867279, -0.6091946155651793, -0.250343032125446, 0.1484250551318267, 0.5235271780141882, 0.8151543408692327, 0.9768073994604692, 0.9827112208609282, 0.8319244570831352, 0.5484896404111711, 0.17759966814940648, -0.22160807981193165, -0.5854810325975929, -0.8560006546579639, -0.990033340735435, -0.966207949879674, -0.7883233747419922, -0.4847428186529565, -0.103871361327294, 0.29356209716833237, 0.644187891504835, 0.8920997088947761, 0.9977686959834515, 0.9443462251469577, 0.7403503615496515, 0.4183076812216731, 0.029566998506218765, -0.36388806031440185, -0.6993221747317495, -0.9232513032888079, -0.9999705660094207, -0.9172472887214079, -0.6882714691076758, -0.3495526680700663, 0.04490133874094826, 0.43219595132377603, 0.750578115277733, 0.9492826754674595, 0.9966267395510541, 0.8850614275030337, 0.6323755196479821, 0.27885908485620187, -0.11912065946216578, -0.4981069442150733, -0.7976714548866447, -0.9700494590922806, -0.9877557610008217, -0.8479671397631547, -0.5729725042652514, -0.2066189882757655, 0.19267935371611902, 0.5612555058676388, 0.8403410205032147, 0.9854364844944291, 0.9734068275613522, 0.8061701452180314, 0.5103918637498076, 0.13323301177063232, -0.26516947530320695, -0.6212914232169571, -0.8783501727021723, -0.9953584173894995, -0.9536595164046486, -0.7599022441361752, -0.4449806615552072, -0.059108143671997085, 0.3361890041779407, 0.6778817454871826, 0.911488118057305, 0.9997602321294933, 0.9286233433482539, 0.7094200318065743, 0.3771016590330079, -0.015344529899822299, -0.4053440759957243, -0.7307126306894266, -0.939571078172224, -0.9986175168673438, -0.8984371554958949, -0.6550034754972249, -0.30713130360921365, 0.08971210486132722, 0.47225116642924597, 0.7794910861454176, 0.9624433088895799, 0.9919366089415965, 0.8632683612109149, 0.596954361795923, 0.2354576410596385, -0.16358214907398494, -0.5365392181406164, -0.8239465933837841, -0.9799779640263051, -0.9797545597304173, -0.8233120016929795, -0.5355946229441911, -0.16247816346248117, 0.2365449896349993, 0.5978516986133006, 0.8638326083975505, 0.9920777988447533, 0.9621389291698469, 0.7787896693069416, 0.4712645514462255, 0.08859760476301597, -0.3081959848657645, -0.655848577431443, -0.8989279289426164, -0.9986757093583726, -0.9391874110758736, -0.7299482786626712, -0.4043209128544033, -0.014225696175907986, 0.37813776839785224, 0.7102082120408555, 0.929037921294371, 0.9997351044810018, 0.9110272913482331, 0.6770586972612659, 0.335134967197576, -0.060225106126626834, -0.4459824529111488, -0.7606291315335032, -0.9539955996590277, -0.9952501089559018, -0.8778147420606648, -0.6204142433018863, -0.26409041002502937, 0.13434190843889393, 0.5113537813025197, 0.8068317085628699, 0.9736625522534111};

	vector<pair<double, double>> X = dtft(x);
	ofstream outFile("dft_result.txt");
	for (int i = 0; i < X.size(); i++)
	{
		outFile << X[i].first << "	" << X[i].second << "\n";
	}
	outFile.close();
	return 0;
}
